@model BetManager.Web.Controllers.Tips.List.TipListViewModel

@{
    ViewBag.Title = "Dashboard";
}

@Styles.Render("~/Content/morris")

<div class="row">
  <h2>@ViewBag.Title</h2>
</div>

<div class="row">
  <div class="panel panel-default">
    <div class="panel-heading">
      <i class="fa fa-bar-chart-o fa-fw"></i> Zisk algoritmu
    </div>
    <!-- /.panel-heading -->
    <div class="panel-body">
      <div id="morris-area-chart"></div>
    </div>
    <!-- /.panel-body -->
  </div>
</div>

@Html.Partial("~/Views/Tip/_IndexFilter.cshtml", Model.Filter)

@Html.Partial("~/Views/Tip/_IndexList.cshtml", Model.Rows)


@section scripts {
  @Scripts.Render("~/bundles/morris")

  <script type="text/javascript">

      var update_size = function () {
          var table = $('#example');
          table.width(table.parent().width());
      }

      $(window).resize(function () {
          clearTimeout(window.refresh_size);
          window.refresh_size = setTimeout(function () { update_size(); }, 250);
      });

      $(document).ready(function () {

          function changeDate(date) {
              return date.split(".").reverse().join("-");
          }

          $('#datepickerFrom').datetimepicker({
              locale: 'cs',
              format: 'L'
          });

          $('#datepickerTo').datetimepicker({
              locale: 'cs',
              format: 'L'
          });

          window.graphDate = changeDate($("#DateTo").val());

          var datatable = $('#example').DataTable({
              responsive: true,
              "AutoWidth": true,
              "serverSide": false,
              "processing": true,
              "pagingType": "simple",
              "ajax": {
                  url: "/api/tip",
                  type: "POST",
                  dataSrc: "",
                  data: function () {
                      return {
                          DateFrom: window.graphDate,
                          DateTo: window.graphDate,
                          Category: $("#Category").val(),
                          Odd: $("#Odd").val().replace(",", ".")
                      }
                  },
              },
              "columns": [
                { data: "DisplayName" },
                { data: "DateStart", render: function (d, t, r) { return moment(r.DateStart).format("YYYY-MM-DD HH:mm"); } },
                { data: "Home", render: function (d, t, r) { return '<button type="button" class="btn btn-sm">' + r.Home.toFixed(1) + '</button>' } },
                { data: "Draw", render: function (d, t, r) { return '<button type="button" class="btn btn-sm">' + r.Draw.toFixed(1) + '</button>' } },
                { data: "Away", render: function (d, t, r) { return '<button type="button" class="btn btn-sm">' + r.Away.toFixed(1) + '</button>' } },
                { data: "FirstValue" },
                { data: "Xvalue" },
                { data: "SecondValue" },
                { data: "Category" },
                { data: "PredictTip" },
                { data: "Odd" },
                { data: "WinnerCode" },
                { data: "ID" , render: function (d, t, r) { return '<a href="/Tip/Detail/' + r.ID + '" class="btn btn-primary">Detail</a>' } },
              ],
              "order": [[1, "asc"]],
              createdRow: function (row, data, dataIndex) {
                  // podbarveni radku
                  var isEqual = data.WinnerCode == data.PredictTip;
                  if (data.WinnerCode > 0 && data.PredictTip > 0) {
                      if (isEqual) {
                          $(row).addClass('success');
                      }
                      else {
                          $(row).addClass('danger');
                      }
                  }
                  // vyber tipu
                  var cssType = data.WinnerCode > 0 ? (isEqual ? 'btn-success' : 'btn-danger') : 'btn-info';
                  if (data.PredictTip == 1) {
                      $('td', row).eq(2).find(":button").addClass(cssType);
                  }
                  else if (data.PredictTip == 3) {
                      $('td', row).eq(3).find(":button").addClass(cssType);
                  }
                  else if (data.PredictTip == 2) {
                      $('td', row).eq(4).find(":button").addClass(cssType);
                  }
                  else {
                      // nic
                  }
              }
          });

          var chart = Morris.Line({
              element: 'morris-area-chart',
              xkey: 'DateStart',
              ykeys: ['Total', 'Correct', 'Price'],
              labels: ['Tipů', 'Odhadnuto', 'Zisk'],
              pointSize: 2,
              hideHover: 'auto',
              dateFormat: function (x) { return moment(x).format("YYYY-MM-DD"); },
              resize: true
          }).on('click', function (i, row) {
              window.graphDate = row.DateStart;
              datatable.ajax.reload();
          });

          $.ajax({
              type: "POST",
              url: "/api/graphtip",

              data: {
                  DateFrom: changeDate($("#DateFrom").val()),
                  DateTo: changeDate($("#DateTo").val()),
                  Category: $("#Category").val(),
                  Odd: $("#Odd").val().replace(",", ".")
              },
              success: function (data) {
                  if (data) {
                      chart.setData(data);
                  }
              }
          });
      });
  </script>
}

